function createColour(e,r,t,a){return{r:e,g:r,b:t,a}}function createRect(e,r,t,a){return{x:e,y:r,w:t,h:a}}function isPowerOfTwo(e){return Math.floor(e/2)==e/2}async function loadTexture(e,r){return await new Promise((t,a)=>{const n=new Image;n.onload=()=>{const r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r),e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST),t(r)},n.src=r})}const defaultVertexShader="\nattribute vec4 position;\nattribute vec4 textureCoord;\nuniform vec4 canvas;\nvarying highp vec2 vTextureCoord;\nvoid main() {\n    gl_Position = position / (canvas * vec4(0.5, 0.5, 1.0, 1.0)) - vec4(1.0, 1.0, 0, 0);\n    vTextureCoord = textureCoord.xy / canvas.xy;\n}",defaultFragmentShader="\nuniform sampler2D sampler;\nvarying highp vec2 vTextureCoord;\nvoid main() {\n    gl_FragColor = texture2D(sampler, vTextureCoord);\n}";let defaultShader=null;function loadShader(e,r,t){const a=e.createShader(r);return e.shaderSource(a,t),e.compileShader(a),e.getShaderParameter(a,e.COMPILE_STATUS)?a:(console.error("Could not compiler shader: "+e.getShaderInfoLog(a)),null)}function createShaderProgram(e,r=null,t=null){const a=loadShader(e,e.VERTEX_SHADER,r||defaultVertexShader),n=loadShader(e,e.FRAGMENT_SHADER,t||defaultFragmentShader),o=e.createProgram();if(e.attachShader(o,a),e.attachShader(o,n),e.linkProgram(o),!e.getProgramParameter(o,e.LINK_STATUS))return console.error("Could not init shader program: "+e.getProgramInfoLog(o)),null;const c=e.canvas.clientWidth,u=e.canvas.clientHeight;e.useProgram(o);const i=e.getUniformLocation(o,"canvas");return e.uniform4f(i,c,u,1,1),{program:o,position:e.getAttribLocation(o,"position"),textureCoord:e.getAttribLocation(o,"textureCoord"),canvas:i,sampler:e.getUniformLocation(o,"sampler")}}function bindDefaultShader(e){return null==defaultShader&&(defaultShader=createShaderProgram(e)),e.useProgram(defaultShader.program),defaultShader}function createBatch(e,r,t){let a=new Float32Array(12*t),n=new Float32Array(12*t),o=0,c=!1;const u=e.createBuffer();e.bindBuffer(e.ARRAY_BUFFER,u),e.bufferData(e.ARRAY_BUFFER,a,e.DYNAMIC_DRAW);const i=e.createBuffer();return e.bindBuffer(e.ARRAY_BUFFER,i),e.bufferData(e.ARRAY_BUFFER,n,e.DYNAMIC_DRAW),{add:(e,r)=>{o>=t||(a[12*o]=r.x,a[12*o+1]=r.y,a[12*o+2]=r.x+r.w,a[12*o+3]=r.y,a[12*o+4]=r.x,a[12*o+5]=r.y+r.h,a[12*o+6]=r.x+r.w,a[12*o+7]=r.y,a[12*o+8]=r.x+r.w,a[12*o+9]=r.y+r.h,a[12*o+10]=r.x,a[12*o+11]=r.y+r.h,n[12*o]=e.x,n[12*o+1]=e.y,n[12*o+2]=e.x+e.w,n[12*o+3]=e.y,n[12*o+4]=e.x,n[12*o+5]=e.y+e.h,n[12*o+6]=e.x+e.w,n[12*o+7]=e.y,n[12*o+8]=e.x+e.w,n[12*o+9]=e.y+e.h,n[12*o+10]=e.x,n[12*o+11]=e.y+e.h,o++)},clear:()=>{c=!1,o=0},render:()=>{if(c)return void console.error("repeat batch rendering without clear");c=!0;let t=bindDefaultShader(e);e.bindBuffer(e.ARRAY_BUFFER,u),e.bufferSubData(e.ARRAY_BUFFER,0,a),e.vertexAttribPointer(t.position,2,e.FLOAT,!1,0,0),e.enableVertexAttribArray(t.position),e.bindBuffer(e.ARRAY_BUFFER,i),e.bufferSubData(e.ARRAY_BUFFER,0,n),e.vertexAttribPointer(t.textureCoord,2,e.FLOAT,!1,0,0),e.enableVertexAttribArray(t.textureCoord),e.activeTexture(e.TEXTURE0),e.bindTexture(e.TEXTURE_2D,r),e.uniform1i(t.sampler,0),e.drawArrays(e.TRIANGLES,0,6*o)}}}function createScreen(e,r,t,a){return{input:e,update:r,render:t,evaluate:a}}function createDullScreen(e,r){return createScreen(e=>!0,e,r,()=>null)}function createLoadScreen(e,...r){let t=null;return Promise.all(r).then(r=>{t=e(...r)}),createDullScreen(function*(){for(;!t;)yield;return t}(),(e,r,t,a,n)=>{e.clearColor(Math.random(),Math.random(),Math.random(),1),e.clear(e.COLOR_BUFFER_BIT)})}function start(e,r){const t=e.canvas.clientWidth,a=e.canvas.clientHeight;screens=[r];const n=(e=null)=>{const r=screens[screens.length-1].update.next(e);if(r.done){const e=screens[screens.length-1].evaluate();screens.pop(),screens.length>0&&n(e)}r.value&&screens.push(r.value)};setInterval(()=>{if(screens.length>0)for(r of(n(),e.clearColor(0,0,0,1),e.clear(e.COLOR_BUFFER_BIT),screens))r.render(e,0,0,t,a)},20)}