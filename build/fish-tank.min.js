var fish;(fish=fish||{}).util={},fish.util.Vector=function(t,e){this.x=t||0,this.y=e||0,this.plus=t=>t instanceof fish.util.Vector?new fish.util.Vector(this.x+t.x,this.y+t.y):new fish.util.Vector(this.x+t,this.y+t),this.minus=t=>t instanceof fish.util.Vector?new fish.util.Vector(this.x-t.x,this.y-t.y):new fish.util.Vector(this.x-t,this.y-t),this.times=t=>t instanceof fish.util.Vector?new fish.util.Vector(this.x-t.x,this.y-t.y):new fish.util.Vector(this.x-t,this.y-t),this.add=t=>{this.x+=t.x,this.y+=t.y},this.wrap=t=>{this.x=this.x<0?t.x-Math.abs(this.x%t.x):this.x%t.x,this.y=this.y<0?t.y-Math.abs(this.y%t.y):this.y%t.y}},fish.util.Rect=class{constructor(t=0,e=0,i=0,s=0){this.pos=new fish.util.Vector(t,e),this.size=new fish.util.Vector(i,s)}get x(){return this.pos.x}get y(){return this.pos.y}get w(){return this.size.x}get h(){return this.size.y}get r(){return this.pos.x+this.size.x}get t(){return this.pos.y+this.size.y}},fish.util.loadText=async function(t){return await new Promise((e,i)=>{let s=new XMLHttpRequest;s.onreadystatechange=function(){4==this.readyState&&(200==this.status?e(this.responseText):i(`couldn't get file '${t}', response code ${this.status}`))},s.open("GET",t,!0),s.send()})},(fish=fish||{}).graphics={},fish.graphics.Texture=function(t,e,i){this.getGlTexture=()=>t,this.getWidth=()=>e,this.getHeight=()=>i},fish.graphics.Atlas=function(){let t={};this.add=(e,i)=>{t[e]=i},this.get=e=>e in t?t[e]:(console.error("unknown sprite name "+e),new fish.util.Rect(0,0,0,0)),this.getPatch=(t,e=0)=>{let i=this.get(t);if(e<=0){let i=t.match(/\d+/);if(!i)throw new Error("fish.graphics.Atlas.getPatch requires a border number or a sprite with a name that ends with a number");e=parseInt(i[0])}return new fish.graphics.Patch(i,e)},this.n=()=>Object.keys(t).length,this.forEach=e=>{for(let i in t)e(i,t[i])}},fish.graphics.Colour=function(t=1,e=1,i=1,s=1){this.r=t,this.g=e,this.b=i,this.a=s},fish.graphics.loadTexture=async function(t,e){return await new Promise((i,s)=>{const r=new Image;r.onload=()=>{const e=t.createTexture();t.activeTexture(t.TEXTURE1),t.bindTexture(t.TEXTURE_2D,e),t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,r),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.NEAREST),i(new fish.graphics.Texture(e,r.width,r.height))},r.onerror=()=>{s("failed loading image "+e)},r.src=e})},fish.graphics.loadAtlas=async function(t){let e=await fish.util.loadText(t);if(null==e)return null;let i=JSON.parse(e),s=new fish.graphics.Atlas;for(let t in i){let e=i[t];s.add(t,new fish.util.Rect(e.x,e.y,e.width,e.height))}return s},fish.graphics.Patch=class{constructor(t,e){let i=t.w-2*e,s=t.h-2*e;if(i<1||s<1)throw`${e} is too wide a border for ${t.w},${t.h}`;this.BORDER=e,this.TL=new fish.util.Rect(t.x,t.y,e,e),this.T=new fish.util.Rect(t.x+e,t.y,i,e),this.TR=new fish.util.Rect(t.x+e+i,t.y,e,e),this.ML=new fish.util.Rect(t.x,t.y+e,e,s),this.M=new fish.util.Rect(t.x+e,t.y+e,i,s),this.MR=new fish.util.Rect(t.x+e+i,t.y+e,e,s),this.BL=new fish.util.Rect(t.x,t.y+e+s,e,e),this.B=new fish.util.Rect(t.x+e,t.y+e+s,i,e),this.BR=new fish.util.Rect(t.x+e+i,t.y+e+s,e,e)}},fish.graphics.PatchRenderer=class{renderPatch(t,e){throw new Error("fish.graphics.PatchRenderer.renderPatch must be implemented")}},fish.graphics.SpriteRenderer=function(t){t.disable(t.DEPTH_TEST),t.enable(t.BLEND),t.blendFunc(t.SRC_ALPHA,t.ONE_MINUS_SRC_ALPHA),this.width=t.canvas.clientWidth,this.height=t.canvas.clientHeight,this.Batch=function(e,i){let s=new Float32Array(12*i),r=new Float32Array(12*i),n=0,a=!1;const h=t.createBuffer();t.bindBuffer(t.ARRAY_BUFFER,h),t.bufferData(t.ARRAY_BUFFER,s,t.DYNAMIC_DRAW);const o=t.createBuffer();t.bindBuffer(t.ARRAY_BUFFER,o),t.bufferData(t.ARRAY_BUFFER,r,t.DYNAMIC_DRAW),this.addComp=(t,e,a,h,o)=>{if(n>=i)return;const u=12*n;s[u]=e,s[u+1]=a,s[u+2]=h,s[u+3]=a,s[u+4]=e,s[u+5]=o,s[u+6]=h,s[u+7]=a,s[u+8]=h,s[u+9]=o,s[u+10]=e,s[u+11]=o,r[u]=t.x,r[u+1]=t.t,r[u+2]=t.r,r[u+3]=t.t,r[u+4]=t.x,r[u+5]=t.y,r[u+6]=t.r,r[u+7]=t.t,r[u+8]=t.r,r[u+9]=t.y,r[u+10]=t.x,r[u+11]=t.y,n++},this.add=(t,e,i=1)=>{let s,r,n,a;if(e instanceof fish.util.Rect)s=e.x,r=e.r,a=e.y,n=e.t;else{if(!(e instanceof fish.util.Vector))throw new TypeError("SpriteRenderer.Batch.add requres a Vector or a Rect");{let h=.5*i;s=e.x-t.w*h,r=e.x+t.w*h,a=e.y-t.h*h,n=e.y+t.h*h}}this.addComp(t,s,n,r,a)},this.addPatch=(t,e)=>{this.addComp(t.BL,e.x,e.y,e.x+t.BORDER,e.y+t.BORDER),this.addComp(t.B,e.x+t.BORDER,e.y,e.r-t.BORDER,e.y+t.BORDER),this.addComp(t.BR,e.r-t.BORDER,e.y,e.r,e.y+t.BORDER),this.addComp(t.ML,e.x,e.y+t.BORDER,e.x+t.BORDER,e.t-t.BORDER),this.addComp(t.M,e.x+t.BORDER,e.y+t.BORDER,e.r-t.BORDER,e.t-t.BORDER),this.addComp(t.MR,e.r-t.BORDER,e.y+t.BORDER,e.r,e.t-t.BORDER),this.addComp(t.TL,e.x,e.t-t.BORDER,e.x+t.BORDER,e.t),this.addComp(t.T,e.x+t.BORDER,e.t-t.BORDER,e.r-t.BORDER,e.t),this.addComp(t.TR,e.r-t.BORDER,e.t-t.BORDER,e.r,e.t)},this.renderPatch=(t,e)=>{this.addPatch(t,e)},this.clear=()=>{a=!1,n=0},this.render=()=>{if(a)return void console.error("repeat batch rendering without clear");a=!0;let i=fish.shader.bindDefaultShader(t);t.bindBuffer(t.ARRAY_BUFFER,h),t.bufferSubData(t.ARRAY_BUFFER,0,s),t.vertexAttribPointer(i.position,2,t.FLOAT,!1,0,0),t.enableVertexAttribArray(i.position),t.bindBuffer(t.ARRAY_BUFFER,o),t.bufferSubData(t.ARRAY_BUFFER,0,r),t.vertexAttribPointer(i.textureCoord,2,t.FLOAT,!1,0,0),t.enableVertexAttribArray(i.textureCoord),t.activeTexture(t.TEXTURE0),t.bindTexture(t.TEXTURE_2D,e.getGlTexture()),t.uniform1i(i.sampler,0),t.uniform2f(i.invTextureSize,1/e.getWidth(),1/e.getHeight()),t.drawArrays(t.TRIANGLES,0,6*n)}},this.loadTexture=async function(e){return await fish.graphics.loadTexture(t,e)},this.clear=(e=1,i=1,s=1,r=1)=>{t.clearColor(e,i,s,r),t.clear(t.COLOR_BUFFER_BIT)},this.clearColour=t=>{this.clear(t.r,t.g,t.b,t.a)}},fish.graphics.BLACK=new fish.graphics.Colour(0,0,0,1),fish.graphics.WHITE=new fish.graphics.Colour(1,1,1,1),fish.graphics.RED=new fish.graphics.Colour(1,0,0,1),fish.graphics.GREEN=new fish.graphics.Colour(0,1,0,1),fish.graphics.BLUE=new fish.graphics.Colour(0,0,1,1),(fish=fish||{}).audio={},fish.audio.Sample=function(t,e){this.name=t,this.buffer=e},fish.audio.BasicAudio=function(t,e=3){let i=t.createBufferSource(),s=t.createBufferSource();i.connect(t.destination),s.connect(t.destination);let r="",n="",a=[],h=0,o=function(){let e=t.createBufferSource();e.connect(t.destination);let i=!1,s=0;this.isPlaying=()=>i,this.getStart=()=>s,this.getPriority=()=>0,this.play=(t,r)=>{i=!0,s=h,t=t,r=r,e.buffer=t.buffer,e.start(0),e.onended=()=>{i=!1}},this.same=t=>i&&t&&t.name==this.sample.name,this.lesser=(t,e)=>!i||0<t||0==t&&s<e};for(let t=0;t<e;t++)a.push(new o);this.update=()=>{h++},this.playSample=(t,e=0)=>{let i=-1,s=-99999,r=0;for(let e=0;e<a.length;e++){if(a[e].same(t)&&a[e].getStart()==h)return;a[e].lesser(s,r)&&(i=e,s=a[e].getPriority(),r=a[e].getStart())}i>=0&&a[i].play(t,e)},this.playSong=t=>{r!=t.name&&(r=t.name,i.buffer=t.buffer,i.start(0))},this.loadSong=async function(t,e){let i=await t.getSample(e);i&&this.playSong(i)},this.playNoise=t=>{n!=t.name&&(n=t.name,s.buffer=t.buffer,s.start(0))},this.loadNoise=async function(t,e){let i=await t.getSample(e);i&&this.playSong(i)},this.loadSample=async function(e){let i=new XMLHttpRequest;return i.open("GET",e,!0),i.responseType="arraybuffer",new Promise((s,r)=>{i.onload=()=>{t.decodeAudioData(i.response,t=>{s(new fish.audio.Sample(e,t))},()=>{r("Couldn't load sample "+e)})},i.send()})}},(fish=fish||{}).input={},fish.input.UI_BUTTON={UP:"UP",DOWN:"DOWN",LEFT:"LEFT",RIGHT:"RIGHT",ACCEPT:"ACCEPT",CANCEL:"CANCEL"},fish.input.UiInput=class{uiDown(t){throw new Error("fish.input.UiInput.uiDown must be implemented")}},fish.input.BasicInput=function(t={},e=.9){this.BUTTONS={UP:"UP",DOWN:"DOWN",LEFT:"LEFT",RIGHT:"RIGHT",X:"X",Y:"Y",A:"A",B:"B",L:"L",R:"R",SELECT:"SELECT",START:"START"},t.UP||(t.UP="ArrowUp"),t.DOWN||(t.DOWN="ArrowDown"),t.LEFT||(t.LEFT="ArrowLeft"),t.RIGHT||(t.RIGHT="ArrowRight"),t.A||(t.A="Shift"),t.B||(t.B="z"),t.X||(t.X="a"),t.Y||(t.Y="x"),t.L||(t.L="d"),t.R||(t.R="c"),t.SELECT||(t.SELECT="Escape"),t.START||(t.START="Enter");let i=0,s={},r={};for(let t in this.BUTTONS)r[t]=0;document.addEventListener("keydown",t=>{s[t.key]=!0}),document.addEventListener("keyup",t=>{s[t.key]=!1});let n=t=>"object"==typeof t?t.pressed:1==t,a=(t,e,s=!1)=>{s&&(e=e||r[t]>0),e?0==r[t]&&(r[t]=i):r[t]=0},h=t=>{switch(t){case fish.input.UI_UP:return this.UP;case fish.input.UI_DOWN:return this.DOWN;case fish.input.UI_LEFT:return this.LEFT;case fish.input.UI_RIGHT:return this.RIGHT;case fish.input.UI_ACCEPT:return this.A;case fish.input.UI_CANCEL:return this.B}return null};this.update=function(){i++;let r=navigator.getGamepads?navigator.getGamepads():navigator.webkitGetGamepads?navigator.webkitGetGamepads():[];for(let e in this.BUTTONS)a(e,s[t[e]]);for(let t of r)a(this.BUTTONS.A,n(t.buttons[0]),!0),a(this.BUTTONS.B,n(t.buttons[1]),!0),a(this.BUTTONS.X,n(t.buttons[2]),!0),a(this.BUTTONS.Y,n(t.buttons[3]),!0),a(this.BUTTONS.L,n(t.buttons[4]),!0),a(this.BUTTONS.R,n(t.buttons[5]),!0),a(this.BUTTONS.SELECT,n(t.buttons[8]),!0),a(this.BUTTONS.START,n(t.buttons[9]),!0),a(this.BUTTONS.UP,n(t.buttons[12])||t.axes[1]<-e,!0),a(this.BUTTONS.DOWN,n(t.buttons[13])||t.axes[1]>e,!0),a(this.BUTTONS.LEFT,n(t.buttons[14])||t.axes[0]<-e,!0),a(this.BUTTONS.RIGHT,n(t.buttons[15])||t.axes[0]>e,!0)},this.down=function(t){if(!(t in r))throw t;return r[t]>0},this.justDown=function(t){if(!(t in r))throw t;return r[t]==i},this.uiDown=t=>this.down(h(t))},(fish=fish||{}).gui={},fish.gui.Style=class{},fish.gui.Knob=class{constructor(t){this.fitted=!1,this.bounds=null,this.style=t}fit(t){this.bounds=t,this.fitted=!0}update(t){return null}render(t){throw new Error("fish.gui.knob.render must be implemented")}},fish.gui.PanelKnob=class extends fish.gui.Knob{constructor(t,e=!0){super(t),this.children=[],this.vertical=e}addChild(t){this.children.push(t)}fit(t){super.fit(t)}},fish.gui.ButtonKnob=class extends fish.gui.Knob{constructor(t,e){super(t),this.child=e}fit(t){super.fit(t)}},(fish=fish||{}).Store=function(t,e,i){let s={},r={texture:t.loadTexture,atlas:fish.graphics.loadAtlas,sample:e.loadSample},n=async function(t,e){if(!(t in s))if(e in r){let n=await r[e](i+t);s[t]=n}else console.error(e+" is a not a valid asset type"),s[t]=null;return s[t]};this.getTexture=async function(t){return await n(t,"texture")},this.getAtlas=async function(t){return await n(t,"atlas")},this.getSample=async function(t){return await n(t,"sample")}},(fish=fish||{}).shader=(()=>{let t=null,e={loadShader:(t,e,i)=>{const s=t.createShader(e);return t.shaderSource(s,i),t.compileShader(s),t.getShaderParameter(s,t.COMPILE_STATUS)?s:(console.error("Could not compiler shader: "+t.getShaderInfoLog(s)),null)},createShaderProgram:(t,i=null,s=null)=>{const r=e.loadShader(t,t.VERTEX_SHADER,i||"\n    attribute vec4 position;\n    attribute vec4 textureCoord;\n    uniform vec4 invCanvas;\n    uniform vec2 invTextureSize;\n    varying highp vec2 vTextureCoord;\n    void main() {\n        gl_Position = position * (invCanvas * vec4(2, 2, 1.0, 1.0)) - vec4(1.0, 1.0, 0, 0);\n        vTextureCoord = textureCoord.xy * invTextureSize;\n    }"),n=e.loadShader(t,t.FRAGMENT_SHADER,s||"\n    uniform sampler2D sampler;\n    varying highp vec2 vTextureCoord;\n    void main() {\n        gl_FragColor = texture2D(sampler, vTextureCoord);\n    }"),a=t.createProgram();if(t.attachShader(a,r),t.attachShader(a,n),t.linkProgram(a),!t.getProgramParameter(a,t.LINK_STATUS))return console.error("Could not init shader program: "+t.getProgramInfoLog(a)),null;const h=t.canvas.clientWidth,o=t.canvas.clientHeight;t.useProgram(a);const u=t.getUniformLocation(a,"invCanvas");return t.uniform4f(u,1/h,1/o,1,1),{program:a,position:t.getAttribLocation(a,"position"),textureCoord:t.getAttribLocation(a,"textureCoord"),invTextureSize:t.getUniformLocation(a,"invTextureSize"),invCanvas:u,sampler:t.getUniformLocation(a,"sampler")}},bindDefaultShader:i=>(null==t&&(t=e.createShaderProgram(i)),i.useProgram(t.program),t)};return e})(),(fish=fish||{}).screen={},fish.screen.Transition=class{constructor(t,e=null,i=null){this.pop=t,this.screen=e,this.message=i}},fish.screen.Screen=class{constructor(t){this.ctx=t}refresh(t){}update(t){return null}render(t){}},(fish=fish||{}).start=async function(t,e,i,s,r,n){const a=1/t;let h={gfx:e,snd:i,in:s,str:r},o=await n(h);if(null==o)return void console.err("No Starting Screen. Game Cannot Start.");let u=[o];o.refresh();setInterval(()=>{if(u.length>0)for(o of(h.snd.update(),h.in.update(),(()=>{const t=u[u.length-1].update(a);t&&(t.pop&&u.pop(),t.screen&&u.push(t.screen),u[u.length-1].refresh(t.message))})(),h.gfx.clear(0,0,0,1),u))o.render()},a)},fish.normalStart=async function(t,e,i,s,r){let n=new fish.graphics.SpriteRenderer(e),a=new fish.audio.BasicAudio(i);await fish.start(t,n,a,new fish.input.BasicInput,new fish.Store(n,a,s),r)};